// K-means clustering.
r=5;
c=5;
f=2;
i=1;
// Arguments:
// - r ... number of records
// - c ... number of centroids
// - f ... number of features
// - i ... number of iterations
t_start = now();
// Data generation.
X = readMatrix("test/api/python/benchmarks/mat1.py");
C = readMatrix("test/api/python/benchmarks/mat2.py");


// K-means clustering (decisive part).
for(i in 1:i) {
    D = (X @ t(C)) * -2.0 + t(sum(C ^ 2.0, 0));
    minD = aggMin(D, 0);
    P = D <= minD;
    P = P / sum(P, 0);
    P_denom = sum(P, 1);
    C = (t(P) @ X) / t(P_denom);
}

// Result output.
//print(C);
t_end = now();
print("Time input read:  \n",0);print(as.f32((t_end - t_start)),0);
